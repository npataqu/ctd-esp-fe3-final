{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\monit\\\\OneDrive\\\\Escritorio\\\\fe3-final\\\\src\\\\Components\\\\utils\\\\global.context.jsx\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n\nimport React, { createContext, useContext, useMemo, useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const initialState = {\n  theme: \"\",\n  data: []\n}; // Aqui deberan definir el estado inicial\n\nexport const themes = {\n  light: {\n    type: \"light\",\n    font: \"black\",\n    background: \"white\"\n  },\n  dark: {\n    type: \"dark\",\n    font: \"white\",\n    background: \"black\"\n  }\n};\nexport const GlobalContext = /*#__PURE__*/createContext(initialState); // Aqui deberan definir el contexto\n\nexport function useGlobal() {\n  _s();\n\n  // Aqui deberan definir el hook personalizado\n  return useContext(GlobalContext);\n}\n\n_s(useGlobal, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\n\nexport function GlobalProvider(_ref) {\n  _s2();\n\n  let {\n    children\n  } = _ref;\n  // Aqui deberan definir el provider\n  //Aqui deberan implementar la logica propia del Context, utilizando el hook useMemo\n  const [theme, setTheme] = useState(themes.light);\n\n  const toggleTheme = () => {\n    console.log(\"entro al boton\");\n    setTheme(prevTheme => prevTheme === themes.light ? themes.dark : themes.light);\n  };\n\n  const tema = useMemo(() => ({\n    theme,\n    toggleTheme\n  }), [theme]);\n  return /*#__PURE__*/_jsxDEV(GlobalContext.Provider, {\n    value: tema,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 5\n  }, this);\n}\n\n_s2(GlobalProvider, \"l6smIkKbok6gOcfsR9qBL5Kehtk=\");\n\n_c = GlobalProvider;\n\nvar _c;\n\n$RefreshReg$(_c, \"GlobalProvider\");","map":{"version":3,"names":["React","createContext","useContext","useMemo","useState","initialState","theme","data","themes","light","type","font","background","dark","GlobalContext","useGlobal","GlobalProvider","children","setTheme","toggleTheme","console","log","prevTheme","tema"],"sources":["C:/Users/monit/OneDrive/Escritorio/fe3-final/src/Components/utils/global.context.jsx"],"sourcesContent":["import React, { createContext, useContext, useMemo, useState } from \"react\";\r\n\r\nexport const initialState = {theme: \"\", data: []} // Aqui deberan definir el estado inicial\r\n\r\nexport const themes = {\r\n  light: {\r\n    type: \"light\",\r\n    font: \"black\",\r\n    background: \"white\",\r\n  },\r\n  dark: {\r\n    type: \"dark\",\r\n    font: \"white\",\r\n    background: \"black\",\r\n  },\r\n};\r\n\r\nexport const GlobalContext = createContext(initialState); // Aqui deberan definir el contexto\r\n\r\nexport function useGlobal() { // Aqui deberan definir el hook personalizado\r\n  return useContext(GlobalContext);\r\n}\r\n\r\nexport function GlobalProvider({ children }) { // Aqui deberan definir el provider\r\n    //Aqui deberan implementar la logica propia del Context, utilizando el hook useMemo\r\n  const [theme, setTheme] = useState(themes.light);\r\n\r\n  const toggleTheme = () => {\r\n    console.log(\"entro al boton\");\r\n    setTheme((prevTheme) =>\r\n      prevTheme === themes.light ? themes.dark : themes.light\r\n    );\r\n  };\r\n\r\n  const tema = useMemo(() => ({ theme, toggleTheme }), [theme]);\r\n\r\n  return (\r\n    <GlobalContext.Provider value={tema}>\r\n      {children}\r\n    </GlobalContext.Provider>\r\n  );\r\n}"],"mappings":";;;;AAAA,OAAOA,KAAP,IAAgBC,aAAhB,EAA+BC,UAA/B,EAA2CC,OAA3C,EAAoDC,QAApD,QAAoE,OAApE;;AAEA,OAAO,MAAMC,YAAY,GAAG;EAACC,KAAK,EAAE,EAAR;EAAYC,IAAI,EAAE;AAAlB,CAArB,C,CAA2C;;AAElD,OAAO,MAAMC,MAAM,GAAG;EACpBC,KAAK,EAAE;IACLC,IAAI,EAAE,OADD;IAELC,IAAI,EAAE,OAFD;IAGLC,UAAU,EAAE;EAHP,CADa;EAMpBC,IAAI,EAAE;IACJH,IAAI,EAAE,MADF;IAEJC,IAAI,EAAE,OAFF;IAGJC,UAAU,EAAE;EAHR;AANc,CAAf;AAaP,OAAO,MAAME,aAAa,gBAAGb,aAAa,CAACI,YAAD,CAAnC,C,CAAmD;;AAE1D,OAAO,SAASU,SAAT,GAAqB;EAAA;;EAAE;EAC5B,OAAOb,UAAU,CAACY,aAAD,CAAjB;AACD;;GAFeC,S;;AAIhB,OAAO,SAASC,cAAT,OAAsC;EAAA;;EAAA,IAAd;IAAEC;EAAF,CAAc;EAAE;EAC3C;EACF,MAAM,CAACX,KAAD,EAAQY,QAAR,IAAoBd,QAAQ,CAACI,MAAM,CAACC,KAAR,CAAlC;;EAEA,MAAMU,WAAW,GAAG,MAAM;IACxBC,OAAO,CAACC,GAAR,CAAY,gBAAZ;IACAH,QAAQ,CAAEI,SAAD,IACPA,SAAS,KAAKd,MAAM,CAACC,KAArB,GAA6BD,MAAM,CAACK,IAApC,GAA2CL,MAAM,CAACC,KAD5C,CAAR;EAGD,CALD;;EAOA,MAAMc,IAAI,GAAGpB,OAAO,CAAC,OAAO;IAAEG,KAAF;IAASa;EAAT,CAAP,CAAD,EAAiC,CAACb,KAAD,CAAjC,CAApB;EAEA,oBACE,QAAC,aAAD,CAAe,QAAf;IAAwB,KAAK,EAAEiB,IAA/B;IAAA,UACGN;EADH;IAAA;IAAA;IAAA;EAAA,QADF;AAKD;;IAlBeD,c;;KAAAA,c"},"metadata":{},"sourceType":"module"}