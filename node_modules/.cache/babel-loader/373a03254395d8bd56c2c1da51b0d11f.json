{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\monit\\\\OneDrive\\\\Escritorio\\\\fe3-final\\\\src\\\\Routes\\\\Favs.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect } from \"react\";\nimport Card from \"../Components/Card\";\nimport { useState } from \"react\"; //Este componente debera ser estilado como \"dark\" o \"light\" dependiendo del theme del Context\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst Favs = () => {\n  _s();\n\n  const [cardFav, setCardFav] = useState([]); // const getLocalStorage = () => {\n  //     return JSON.parse(localStorage.getItem(\"card\"))\n  //   }\n  //   useEffect(() => {\n  //     const datosStorage = getLocalStorage();\n  //     if (datosStorage) {\n  //       console.log(datosStorage)\n  //             SetCardFav(datosStorage);\n  //     }\n  //     return \n  //   }, [])\n\n  const getLocalStorage = () => {\n    const data = localStorage.getItem(\"card\");\n    console.log(\"Data from localStorage:\", data);\n\n    try {\n      // const data = JSON.parse(localStorage.getItem(\"card\"));\n      const parsedData = JSON.parse(data);\n\n      if (Array.isArray(data)) {\n        return data;\n      } else {\n        return [];\n      }\n    } catch (error) {\n      console.error(\"Error parsing local storage data:\", error);\n      return [];\n    }\n  };\n\n  useEffect(() => {\n    const datosStorage = getLocalStorage();\n    setCardFav(datosStorage);\n    console.log(datosStorage);\n  }, []);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Dentists Favs\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"card-grid\",\n      children: cardFav.map(card => /*#__PURE__*/_jsxDEV(Card, {\n        odontologo: card\n      }, card.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n\n_s(Favs, \"tCk6vVGzBg0JD/Xeyu1Ccdva2/c=\");\n\n_c = Favs;\nexport default Favs;\n\nvar _c;\n\n$RefreshReg$(_c, \"Favs\");","map":{"version":3,"names":["React","useEffect","Card","useState","Favs","cardFav","setCardFav","getLocalStorage","data","localStorage","getItem","console","log","parsedData","JSON","parse","Array","isArray","error","datosStorage","map","card","id"],"sources":["C:/Users/monit/OneDrive/Escritorio/fe3-final/src/Routes/Favs.jsx"],"sourcesContent":["import React, { useEffect } from \"react\";\r\nimport Card from \"../Components/Card\";\r\nimport { useState } from \"react\";\r\n\r\n//Este componente debera ser estilado como \"dark\" o \"light\" dependiendo del theme del Context\r\n\r\nconst Favs = () => {\r\n\r\n  const [cardFav, setCardFav] = useState([]);\r\n\r\n// const getLocalStorage = () => {\r\n//     return JSON.parse(localStorage.getItem(\"card\"))\r\n    \r\n//   }\r\n//   useEffect(() => {\r\n//     const datosStorage = getLocalStorage();\r\n//     if (datosStorage) {\r\n//       console.log(datosStorage)\r\n//             SetCardFav(datosStorage);\r\n           \r\n//     }\r\n//     return \r\n//   }, [])\r\n\r\nconst getLocalStorage = () => {\r\n  const data = localStorage.getItem(\"card\");\r\n  console.log(\"Data from localStorage:\", data);\r\n  try {\r\n    // const data = JSON.parse(localStorage.getItem(\"card\"));\r\n    const parsedData = JSON.parse(data);\r\n    if (Array.isArray(data)) {\r\n      return data;\r\n    } else {\r\n      return [];\r\n    }\r\n  } catch (error) {\r\n    console.error(\"Error parsing local storage data:\", error);\r\n    return [];\r\n  }\r\n};\r\nuseEffect(() => {\r\n  const datosStorage = getLocalStorage();\r\n  setCardFav(datosStorage);\r\n  console.log(datosStorage);\r\n}, []);\r\n\r\n\r\n  return (\r\n    <>\r\n      <h1>Dentists Favs</h1>\r\n      <div className=\"card-grid\">\r\n        {cardFav.map((card)=>(\r\n          <Card odontologo={card} key={card.id}/>\r\n        ))}\r\n\r\n\r\n        {/* este componente debe consumir los destacados del localStorage */}\r\n        {/* Deberan renderizar una Card por cada uno de ellos */}\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Favs;\r\n"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,IAAP,MAAiB,oBAAjB;AACA,SAASC,QAAT,QAAyB,OAAzB,C,CAEA;;;;;AAEA,MAAMC,IAAI,GAAG,MAAM;EAAA;;EAEjB,MAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBH,QAAQ,CAAC,EAAD,CAAtC,CAFiB,CAInB;EACA;EAEA;EACA;EACA;EACA;EACA;EACA;EAEA;EACA;EACA;;EAEA,MAAMI,eAAe,GAAG,MAAM;IAC5B,MAAMC,IAAI,GAAGC,YAAY,CAACC,OAAb,CAAqB,MAArB,CAAb;IACAC,OAAO,CAACC,GAAR,CAAY,yBAAZ,EAAuCJ,IAAvC;;IACA,IAAI;MACF;MACA,MAAMK,UAAU,GAAGC,IAAI,CAACC,KAAL,CAAWP,IAAX,CAAnB;;MACA,IAAIQ,KAAK,CAACC,OAAN,CAAcT,IAAd,CAAJ,EAAyB;QACvB,OAAOA,IAAP;MACD,CAFD,MAEO;QACL,OAAO,EAAP;MACD;IACF,CARD,CAQE,OAAOU,KAAP,EAAc;MACdP,OAAO,CAACO,KAAR,CAAc,mCAAd,EAAmDA,KAAnD;MACA,OAAO,EAAP;IACD;EACF,CAfD;;EAgBAjB,SAAS,CAAC,MAAM;IACd,MAAMkB,YAAY,GAAGZ,eAAe,EAApC;IACAD,UAAU,CAACa,YAAD,CAAV;IACAR,OAAO,CAACC,GAAR,CAAYO,YAAZ;EACD,CAJQ,EAIN,EAJM,CAAT;EAOE,oBACE;IAAA,wBACE;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QADF,eAEE;MAAK,SAAS,EAAC,WAAf;MAAA,UACGd,OAAO,CAACe,GAAR,CAAaC,IAAD,iBACX,QAAC,IAAD;QAAM,UAAU,EAAEA;MAAlB,GAA6BA,IAAI,CAACC,EAAlC;QAAA;QAAA;QAAA;MAAA,QADD;IADH;MAAA;MAAA;MAAA;IAAA,QAFF;EAAA,gBADF;AAcD,CAvDD;;GAAMlB,I;;KAAAA,I;AAyDN,eAAeA,IAAf"},"metadata":{},"sourceType":"module"}